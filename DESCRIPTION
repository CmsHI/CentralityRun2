
Basic histograms are made by MakeHists.C

/////////////////////////////////////////////////////////////////////
//Run by run data comparison{{{

During the run several plots should be compared run by run.
RunbyRunComp/RunbyRunComp.C draw comparions with some runs.
To see more precisely ratio also compared in this code.
This code uses output from MakeHists.C
//}}}
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////
//Efficiency calculation{{{

MC can not describe data perfectly. So they should be scaled by data.
To see what kind of scale is needed to each variable Efficiency/ScaleMC/Comp_Before_Scale.C draw comparison plot among data and MCs.

Also MC efficiencies for each MC before scale can be compared by Efficiency/ScaleMC/MCeffComp.C

By applying several scale factor, chi2 is obtained. The one giving minimum chi2 is selected as final scale factor.
The chi2 values are changed with respect to the range of integration. Final scale factor also could be changed by integration range.
Efficiency/ScaleMC/CutScanForScaleFactor.C calculate final scale factors with different ranges. And the result scale factors are stored as txt file in the Efficiency/ScaleMC/Scaled directory.
Efficiency/ScaleMC/CompScan.C draw and compare the chi2 distributions.
With the selected range correspond scalefactor stored by Efficiency/ScaleMC/GetScaleFactor.C as txt file.

Using the scale factors Efficiency/ScaleMC/ScaledMCeff.C scale MC and calculate new MC efficiency. Efficiency/ScaleMC/do_Eff.sh runs the macro.
The coincidence filter used in event selection is applied to tower(HF energy). So all the tower energies should be scaled by HF scale factor and filtered by coincidence filter.
The passed events are scaled by current variable's scale factor.
The definition of efficiency is selected(scaled)/total(scaled).

Scaled MC distributions are compared with data by Efficiency/ScaleMC/Comp_After_Scale.C

There are several ways to obtain efficiency. To be convinced with the result these methods are compared.

Folding method is weighting data via MC.
MC is pure events. So by weighting data, which is passed event selection, real events could be recovered.
The definition of data efficiency is data(selected)/data(selected and weighted by MC efficiency) 
Efficiency/FoldingMethod/foldEfftoData.C calculate data efficiency.

Fitting method

Tower method
//}}}
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////
//{{{Coincidence filter determination

To reject EM event from data we should know how much EM events rejected and collision events survived by filter.
The coincidence filter is dedicated to EM rejection.
If coincidence filter can remove EM events by combining with the other filters, need to see combined filter efficiency. Otherwise, only coincidence filter effect could be considered to select threshold and coincidence level.
EMContamination/CoinRate.C scans the coincidence threshold and coincidence level.
//}}}
/////////////////////////////////////////////////////////////////////
